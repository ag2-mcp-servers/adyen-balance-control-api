# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T08:59:40+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Optional

from pydantic import BaseModel, Field, constr


class Amount(BaseModel):
    currency: constr(min_length=3, max_length=3) = Field(
        ...,
        description='The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).',
    )
    value: int = Field(
        ...,
        description='The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).',
    )


class Type(Enum):
    tax = 'tax'
    fee = 'fee'
    terminalSale = 'terminalSale'
    credit = 'credit'
    debit = 'debit'
    adjustment = 'adjustment'


class BalanceTransferRequest(BaseModel):
    amount: Amount = Field(
        ...,
        description='The amount of the transfer in [minor units](https://docs.adyen.com/development-resources/currency-codes).',
    )
    description: Optional[constr(max_length=140)] = Field(
        None,
        description='A human-readable description for the transfer. You can use alphanumeric characters and hyphens. We recommend sending a maximum of 140 characters, otherwise the description may be truncated.',
    )
    fromMerchant: str = Field(
        ...,
        description='The unique identifier of the source merchant account from which funds are deducted.',
    )
    reference: Optional[constr(max_length=80)] = Field(
        None,
        description="A reference for the balance transfer. If you don't provide this in the request, Adyen generates a unique reference.\nMaximum length: 80 characters.",
    )
    toMerchant: str = Field(
        ...,
        description='The unique identifier of the destination merchant account from which funds are transferred.',
    )
    type: Type = Field(
        ...,
        description='The type of balance transfer. Possible values: **tax**, **fee**, **terminalSale**, **credit**, **debit**, and **adjustment**.',
    )


class Status(Enum):
    error = 'error'
    failed = 'failed'
    notEnoughBalance = 'notEnoughBalance'
    transferred = 'transferred'


class BalanceTransferResponse(BaseModel):
    amount: Amount = Field(
        ...,
        description='The amount of the transfer in [minor units](https://docs.adyen.com/development-resources/currency-codes).',
    )
    createdAt: datetime = Field(
        ..., description='The date when the balance transfer was requested.'
    )
    description: Optional[constr(max_length=140)] = Field(
        None,
        description='A human-readable description for the transfer. You can use alphanumeric characters and hyphens. We recommend sending a maximum of 140 characters, otherwise the description may be truncated.',
    )
    fromMerchant: str = Field(
        ...,
        description='The unique identifier of the source merchant account from which funds are deducted.',
    )
    pspReference: str = Field(
        ...,
        description="Adyen's 16-character string reference associated with the balance transfer.",
    )
    reference: Optional[constr(max_length=80)] = Field(
        None,
        description="A reference for the balance transfer. If you don't provide this in the request, Adyen generates a unique reference.\nMaximum length: 80 characters.",
    )
    status: Status = Field(
        ...,
        description='The status of the balance transfer. Possible values: **transferred**, **failed**, **error**, and **notEnoughBalance**.',
    )
    toMerchant: str = Field(
        ...,
        description='The unique identifier of the destination merchant account from which funds are transferred.',
    )
    type: Type = Field(
        ...,
        description='The type of balance transfer. Possible values: **tax**, **fee**, **terminalSale**, **credit**, **debit**, and **adjustment**.',
    )
